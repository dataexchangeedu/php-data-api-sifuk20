<?php
/**
 * PersonalApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DataExchange\UK\20
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SIF (UK), v.2.0
 *
 * DataExchange for the SIF (UK), v.2.0 data model
 *
 * OpenAPI spec version: 1.0
 * Contact: support@zinethq.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace DataExchange\UK\20;

use \DataExchange\UK\20\Configuration;
use \DataExchange\UK\20\ApiClient;
use \DataExchange\UK\20\ApiException;
use \DataExchange\UK\20\ObjectSerializer;

/**
 * PersonalApiTest Class Doc Comment
 *
 * @category Class
 * @package  DataExchange\UK\20
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PersonalApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for createContactPersonals
     *
     * Create multiple ContactPersonals.
     *
     */
    public function testCreateContactPersonals()
    {

    }

    /**
     * Test case for createIdentitys
     *
     * Create multiple Identitys.
     *
     */
    public function testCreateIdentitys()
    {

    }

    /**
     * Test case for createLearnerContacts
     *
     * Create multiple LearnerContacts.
     *
     */
    public function testCreateLearnerContacts()
    {

    }

    /**
     * Test case for createLearnerEntitlements
     *
     * Create multiple LearnerEntitlements.
     *
     */
    public function testCreateLearnerEntitlements()
    {

    }

    /**
     * Test case for createLearnerPersonals
     *
     * Create multiple LearnerPersonals.
     *
     */
    public function testCreateLearnerPersonals()
    {

    }

    /**
     * Test case for createPersonDietaryPreferences
     *
     * Create multiple PersonDietaryPreferences.
     *
     */
    public function testCreatePersonDietaryPreferences()
    {

    }

    /**
     * Test case for createPersonPictures
     *
     * Create multiple PersonPictures.
     *
     */
    public function testCreatePersonPictures()
    {

    }

    /**
     * Test case for createWorkforcePersonals
     *
     * Create multiple WorkforcePersonals.
     *
     */
    public function testCreateWorkforcePersonals()
    {

    }

    /**
     * Test case for deleteContactPersonalByRefId
     *
     * Delete ContactPersonal by RefId.
     *
     */
    public function testDeleteContactPersonalByRefId()
    {

    }

    /**
     * Test case for deleteContactPersonals
     *
     * Delete multiple ContactPersonals.
     *
     */
    public function testDeleteContactPersonals()
    {

    }

    /**
     * Test case for deleteIdentityByRefId
     *
     * Delete Identity by RefId.
     *
     */
    public function testDeleteIdentityByRefId()
    {

    }

    /**
     * Test case for deleteIdentitys
     *
     * Delete multiple Identitys.
     *
     */
    public function testDeleteIdentitys()
    {

    }

    /**
     * Test case for deleteLearnerContactByRefId
     *
     * Delete LearnerContact by RefId.
     *
     */
    public function testDeleteLearnerContactByRefId()
    {

    }

    /**
     * Test case for deleteLearnerContacts
     *
     * Delete multiple LearnerContacts.
     *
     */
    public function testDeleteLearnerContacts()
    {

    }

    /**
     * Test case for deleteLearnerEntitlementByRefId
     *
     * Delete LearnerEntitlement by RefId.
     *
     */
    public function testDeleteLearnerEntitlementByRefId()
    {

    }

    /**
     * Test case for deleteLearnerEntitlements
     *
     * Delete multiple LearnerEntitlements.
     *
     */
    public function testDeleteLearnerEntitlements()
    {

    }

    /**
     * Test case for deleteLearnerPersonalByRefId
     *
     * Delete LearnerPersonal by RefId.
     *
     */
    public function testDeleteLearnerPersonalByRefId()
    {

    }

    /**
     * Test case for deleteLearnerPersonals
     *
     * Delete multiple LearnerPersonals.
     *
     */
    public function testDeleteLearnerPersonals()
    {

    }

    /**
     * Test case for deletePersonDietaryPreferenceByRefId
     *
     * Delete PersonDietaryPreference by RefId.
     *
     */
    public function testDeletePersonDietaryPreferenceByRefId()
    {

    }

    /**
     * Test case for deletePersonDietaryPreferences
     *
     * Delete multiple PersonDietaryPreferences.
     *
     */
    public function testDeletePersonDietaryPreferences()
    {

    }

    /**
     * Test case for deletePersonPictures
     *
     * Delete multiple PersonPictures.
     *
     */
    public function testDeletePersonPictures()
    {

    }

    /**
     * Test case for deleteWorkforcePersonalByRefId
     *
     * Delete WorkforcePersonal by RefId.
     *
     */
    public function testDeleteWorkforcePersonalByRefId()
    {

    }

    /**
     * Test case for deleteWorkforcePersonals
     *
     * Delete multiple WorkforcePersonals.
     *
     */
    public function testDeleteWorkforcePersonals()
    {

    }

    /**
     * Test case for getContactPersonalByRefId
     *
     * Find ContactPersonal by RefId.
     *
     */
    public function testGetContactPersonalByRefId()
    {

    }

    /**
     * Test case for getContactPersonals
     *
     * Return all ContactPersonals.
     *
     */
    public function testGetContactPersonals()
    {

    }

    /**
     * Test case for getIdentityByRefId
     *
     * Find Identity by RefId.
     *
     */
    public function testGetIdentityByRefId()
    {

    }

    /**
     * Test case for getIdentitys
     *
     * Return all Identitys.
     *
     */
    public function testGetIdentitys()
    {

    }

    /**
     * Test case for getLearnerContactByRefId
     *
     * Find LearnerContact by RefId.
     *
     */
    public function testGetLearnerContactByRefId()
    {

    }

    /**
     * Test case for getLearnerContacts
     *
     * Return all LearnerContacts.
     *
     */
    public function testGetLearnerContacts()
    {

    }

    /**
     * Test case for getLearnerEntitlementByRefId
     *
     * Find LearnerEntitlement by RefId.
     *
     */
    public function testGetLearnerEntitlementByRefId()
    {

    }

    /**
     * Test case for getLearnerEntitlements
     *
     * Return all LearnerEntitlements.
     *
     */
    public function testGetLearnerEntitlements()
    {

    }

    /**
     * Test case for getLearnerPersonalByRefId
     *
     * Find LearnerPersonal by RefId.
     *
     */
    public function testGetLearnerPersonalByRefId()
    {

    }

    /**
     * Test case for getLearnerPersonals
     *
     * Return all LearnerPersonals.
     *
     */
    public function testGetLearnerPersonals()
    {

    }

    /**
     * Test case for getPersonDietaryPreferenceByRefId
     *
     * Find PersonDietaryPreference by RefId.
     *
     */
    public function testGetPersonDietaryPreferenceByRefId()
    {

    }

    /**
     * Test case for getPersonDietaryPreferences
     *
     * Return all PersonDietaryPreferences.
     *
     */
    public function testGetPersonDietaryPreferences()
    {

    }

    /**
     * Test case for getPersonPictures
     *
     * Return all PersonPictures.
     *
     */
    public function testGetPersonPictures()
    {

    }

    /**
     * Test case for getWorkforcePersonalByRefId
     *
     * Find WorkforcePersonal by RefId.
     *
     */
    public function testGetWorkforcePersonalByRefId()
    {

    }

    /**
     * Test case for getWorkforcePersonals
     *
     * Return all WorkforcePersonals.
     *
     */
    public function testGetWorkforcePersonals()
    {

    }

    /**
     * Test case for updateContactPersonalByRefId
     *
     * Update ContactPersonal by RefId.
     *
     */
    public function testUpdateContactPersonalByRefId()
    {

    }

    /**
     * Test case for updateContactPersonals
     *
     * Update multiple ContactPersonals.
     *
     */
    public function testUpdateContactPersonals()
    {

    }

    /**
     * Test case for updateIdentityByRefId
     *
     * Update Identity by RefId.
     *
     */
    public function testUpdateIdentityByRefId()
    {

    }

    /**
     * Test case for updateIdentitys
     *
     * Update multiple Identitys.
     *
     */
    public function testUpdateIdentitys()
    {

    }

    /**
     * Test case for updateLearnerContactByRefId
     *
     * Update LearnerContact by RefId.
     *
     */
    public function testUpdateLearnerContactByRefId()
    {

    }

    /**
     * Test case for updateLearnerContacts
     *
     * Update multiple LearnerContacts.
     *
     */
    public function testUpdateLearnerContacts()
    {

    }

    /**
     * Test case for updateLearnerEntitlementByRefId
     *
     * Update LearnerEntitlement by RefId.
     *
     */
    public function testUpdateLearnerEntitlementByRefId()
    {

    }

    /**
     * Test case for updateLearnerEntitlements
     *
     * Update multiple LearnerEntitlements.
     *
     */
    public function testUpdateLearnerEntitlements()
    {

    }

    /**
     * Test case for updateLearnerPersonalByRefId
     *
     * Update LearnerPersonal by RefId.
     *
     */
    public function testUpdateLearnerPersonalByRefId()
    {

    }

    /**
     * Test case for updateLearnerPersonals
     *
     * Update multiple LearnerPersonals.
     *
     */
    public function testUpdateLearnerPersonals()
    {

    }

    /**
     * Test case for updatePersonDietaryPreferenceByRefId
     *
     * Update PersonDietaryPreference by RefId.
     *
     */
    public function testUpdatePersonDietaryPreferenceByRefId()
    {

    }

    /**
     * Test case for updatePersonDietaryPreferences
     *
     * Update multiple PersonDietaryPreferences.
     *
     */
    public function testUpdatePersonDietaryPreferences()
    {

    }

    /**
     * Test case for updatePersonPictures
     *
     * Update multiple PersonPictures.
     *
     */
    public function testUpdatePersonPictures()
    {

    }

    /**
     * Test case for updateWorkforcePersonalByRefId
     *
     * Update WorkforcePersonal by RefId.
     *
     */
    public function testUpdateWorkforcePersonalByRefId()
    {

    }

    /**
     * Test case for updateWorkforcePersonals
     *
     * Update multiple WorkforcePersonals.
     *
     */
    public function testUpdateWorkforcePersonals()
    {

    }

}
