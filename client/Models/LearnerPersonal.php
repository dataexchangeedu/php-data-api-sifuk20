<?php
/**
 * LearnerPersonal
 *
 * PHP version 5
 *
 * @category Class
 * @package  DataExchange\SIFUK20
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SIF (UK), v.2.0
 *
 * DataExchange for the SIF (UK), v.2.0 data model
 *
 * OpenAPI spec version: 1.0
 * Contact: support@dataexchange.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DataExchange\SIFUK20\Models;

use \ArrayAccess;

/**
 * LearnerPersonal Class Doc Comment
 *
 * @category    Class */
 // @description This object contains personal information related to a learner. As most learners are enroled in the school or establishment publishing this object, basic enrolment information is also provided to aid in overall SIF performance.
/**
 * @package     DataExchange\SIFUK20
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LearnerPersonal implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'LearnerPersonal';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ref_id' => 'string',
        'local_id' => 'string',
        'alert_msg_list' => '\DataExchange\SIFUK20\Models\AlertMsg[]',
        'medical_alert_msg_list' => '\DataExchange\SIFUK20\Models\MedicalAlertMsg[]',
        'personal_information' => '\DataExchange\SIFUK20\Models\PersonalInformation',
        'uipi' => 'string',
        'upn' => 'string',
        'upn_allocation_date' => '\DateTime',
        'former_upn_list' => 'string[]',
        'uln' => 'string',
        'external_learner_identifier_list' => '\DataExchange\SIFUK20\Models\ExternalLearnerIdentifier[]',
        'family_structure' => 'string',
        'in_care' => '\DataExchange\SIFUK20\Models\InCare',
        'connexions_agreement' => 'string',
        'child_protection_register' => '\DataExchange\SIFUK20\Models\ChildProtectionRegister',
        'gifted_talented' => 'string',
        'home_la' => 'string',
        'learner_identity' => 'string',
        'mode_of_travel' => 'string',
        'pregnant' => 'string',
        'sibling_list' => '\DataExchange\SIFUK20\Models\Sibling[]',
        'uniform_allowance' => 'string',
        'current_school_enrolment' => '\DataExchange\SIFUK20\Models\CurrentSchoolEnrolment',
        'previous_establishment_list' => '\DataExchange\SIFUK20\Models\PreviousEstablishment[]',
        'sif_extended_elements' => '\DataExchange\SIFUK20\Models\SIFExtendedElement1[]'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'ref_id' => '@RefId',
        'local_id' => 'LocalId',
        'alert_msg_list' => 'AlertMsgList',
        'medical_alert_msg_list' => 'MedicalAlertMsgList',
        'personal_information' => 'PersonalInformation',
        'uipi' => 'UIPI',
        'upn' => 'UPN',
        'upn_allocation_date' => 'UPNAllocationDate',
        'former_upn_list' => 'FormerUPNList',
        'uln' => 'ULN',
        'external_learner_identifier_list' => 'ExternalLearnerIdentifierList',
        'family_structure' => 'FamilyStructure',
        'in_care' => 'InCare',
        'connexions_agreement' => 'ConnexionsAgreement',
        'child_protection_register' => 'ChildProtectionRegister',
        'gifted_talented' => 'GiftedTalented',
        'home_la' => 'HomeLA',
        'learner_identity' => 'LearnerIdentity',
        'mode_of_travel' => 'ModeOfTravel',
        'pregnant' => 'Pregnant',
        'sibling_list' => 'SiblingList',
        'uniform_allowance' => 'UniformAllowance',
        'current_school_enrolment' => 'CurrentSchoolEnrolment',
        'previous_establishment_list' => 'PreviousEstablishmentList',
        'sif_extended_elements' => 'SIF_ExtendedElements'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'ref_id' => 'setRefId',
        'local_id' => 'setLocalId',
        'alert_msg_list' => 'setAlertMsgList',
        'medical_alert_msg_list' => 'setMedicalAlertMsgList',
        'personal_information' => 'setPersonalInformation',
        'uipi' => 'setUipi',
        'upn' => 'setUpn',
        'upn_allocation_date' => 'setUpnAllocationDate',
        'former_upn_list' => 'setFormerUpnList',
        'uln' => 'setUln',
        'external_learner_identifier_list' => 'setExternalLearnerIdentifierList',
        'family_structure' => 'setFamilyStructure',
        'in_care' => 'setInCare',
        'connexions_agreement' => 'setConnexionsAgreement',
        'child_protection_register' => 'setChildProtectionRegister',
        'gifted_talented' => 'setGiftedTalented',
        'home_la' => 'setHomeLa',
        'learner_identity' => 'setLearnerIdentity',
        'mode_of_travel' => 'setModeOfTravel',
        'pregnant' => 'setPregnant',
        'sibling_list' => 'setSiblingList',
        'uniform_allowance' => 'setUniformAllowance',
        'current_school_enrolment' => 'setCurrentSchoolEnrolment',
        'previous_establishment_list' => 'setPreviousEstablishmentList',
        'sif_extended_elements' => 'setSifExtendedElements'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'ref_id' => 'getRefId',
        'local_id' => 'getLocalId',
        'alert_msg_list' => 'getAlertMsgList',
        'medical_alert_msg_list' => 'getMedicalAlertMsgList',
        'personal_information' => 'getPersonalInformation',
        'uipi' => 'getUipi',
        'upn' => 'getUpn',
        'upn_allocation_date' => 'getUpnAllocationDate',
        'former_upn_list' => 'getFormerUpnList',
        'uln' => 'getUln',
        'external_learner_identifier_list' => 'getExternalLearnerIdentifierList',
        'family_structure' => 'getFamilyStructure',
        'in_care' => 'getInCare',
        'connexions_agreement' => 'getConnexionsAgreement',
        'child_protection_register' => 'getChildProtectionRegister',
        'gifted_talented' => 'getGiftedTalented',
        'home_la' => 'getHomeLa',
        'learner_identity' => 'getLearnerIdentity',
        'mode_of_travel' => 'getModeOfTravel',
        'pregnant' => 'getPregnant',
        'sibling_list' => 'getSiblingList',
        'uniform_allowance' => 'getUniformAllowance',
        'current_school_enrolment' => 'getCurrentSchoolEnrolment',
        'previous_establishment_list' => 'getPreviousEstablishmentList',
        'sif_extended_elements' => 'getSifExtendedElements'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ref_id'] = isset($data['ref_id']) ? $data['ref_id'] : null;
        $this->container['local_id'] = isset($data['local_id']) ? $data['local_id'] : null;
        $this->container['alert_msg_list'] = isset($data['alert_msg_list']) ? $data['alert_msg_list'] : null;
        $this->container['medical_alert_msg_list'] = isset($data['medical_alert_msg_list']) ? $data['medical_alert_msg_list'] : null;
        $this->container['personal_information'] = isset($data['personal_information']) ? $data['personal_information'] : null;
        $this->container['uipi'] = isset($data['uipi']) ? $data['uipi'] : null;
        $this->container['upn'] = isset($data['upn']) ? $data['upn'] : null;
        $this->container['upn_allocation_date'] = isset($data['upn_allocation_date']) ? $data['upn_allocation_date'] : null;
        $this->container['former_upn_list'] = isset($data['former_upn_list']) ? $data['former_upn_list'] : null;
        $this->container['uln'] = isset($data['uln']) ? $data['uln'] : null;
        $this->container['external_learner_identifier_list'] = isset($data['external_learner_identifier_list']) ? $data['external_learner_identifier_list'] : null;
        $this->container['family_structure'] = isset($data['family_structure']) ? $data['family_structure'] : null;
        $this->container['in_care'] = isset($data['in_care']) ? $data['in_care'] : null;
        $this->container['connexions_agreement'] = isset($data['connexions_agreement']) ? $data['connexions_agreement'] : null;
        $this->container['child_protection_register'] = isset($data['child_protection_register']) ? $data['child_protection_register'] : null;
        $this->container['gifted_talented'] = isset($data['gifted_talented']) ? $data['gifted_talented'] : null;
        $this->container['home_la'] = isset($data['home_la']) ? $data['home_la'] : null;
        $this->container['learner_identity'] = isset($data['learner_identity']) ? $data['learner_identity'] : null;
        $this->container['mode_of_travel'] = isset($data['mode_of_travel']) ? $data['mode_of_travel'] : null;
        $this->container['pregnant'] = isset($data['pregnant']) ? $data['pregnant'] : null;
        $this->container['sibling_list'] = isset($data['sibling_list']) ? $data['sibling_list'] : null;
        $this->container['uniform_allowance'] = isset($data['uniform_allowance']) ? $data['uniform_allowance'] : null;
        $this->container['current_school_enrolment'] = isset($data['current_school_enrolment']) ? $data['current_school_enrolment'] : null;
        $this->container['previous_establishment_list'] = isset($data['previous_establishment_list']) ? $data['previous_establishment_list'] : null;
        $this->container['sif_extended_elements'] = isset($data['sif_extended_elements']) ? $data['sif_extended_elements'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['ref_id'] === null) {
            $invalid_properties[] = "'ref_id' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['ref_id'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets ref_id
     * @return string
     */
    public function getRefId()
    {
        return $this->container['ref_id'];
    }

    /**
     * Sets ref_id
     * @param string $ref_id The ID (GUID) of the learner. Note that this GUID may be the same one assigned to this person when this person is either a contact (ContactPersonal) or a member of the workforce (WorkforcePersonal).
     * @return $this
     */
    public function setRefId($ref_id)
    {
        $this->container['ref_id'] = $ref_id;

        return $this;
    }

    /**
     * Gets local_id
     * @return string
     */
    public function getLocalId()
    {
        return $this->container['local_id'];
    }

    /**
     * Sets local_id
     * @param string $local_id The locally-assigned identifier for this learner. This can be the internal pupil number or any other number as determined by the publishing agent.
     * @return $this
     */
    public function setLocalId($local_id)
    {
        $this->container['local_id'] = $local_id;

        return $this;
    }

    /**
     * Gets alert_msg_list
     * @return \DataExchange\SIFUK20\Models\AlertMsg[]
     */
    public function getAlertMsgList()
    {
        return $this->container['alert_msg_list'];
    }

    /**
     * Sets alert_msg_list
     * @param \DataExchange\SIFUK20\Models\AlertMsg[] $alert_msg_list
     * @return $this
     */
    public function setAlertMsgList($alert_msg_list)
    {
        $this->container['alert_msg_list'] = $alert_msg_list;

        return $this;
    }

    /**
     * Gets medical_alert_msg_list
     * @return \DataExchange\SIFUK20\Models\MedicalAlertMsg[]
     */
    public function getMedicalAlertMsgList()
    {
        return $this->container['medical_alert_msg_list'];
    }

    /**
     * Sets medical_alert_msg_list
     * @param \DataExchange\SIFUK20\Models\MedicalAlertMsg[] $medical_alert_msg_list
     * @return $this
     */
    public function setMedicalAlertMsgList($medical_alert_msg_list)
    {
        $this->container['medical_alert_msg_list'] = $medical_alert_msg_list;

        return $this;
    }

    /**
     * Gets personal_information
     * @return \DataExchange\SIFUK20\Models\PersonalInformation
     */
    public function getPersonalInformation()
    {
        return $this->container['personal_information'];
    }

    /**
     * Sets personal_information
     * @param \DataExchange\SIFUK20\Models\PersonalInformation $personal_information
     * @return $this
     */
    public function setPersonalInformation($personal_information)
    {
        $this->container['personal_information'] = $personal_information;

        return $this;
    }

    /**
     * Gets uipi
     * @return string
     */
    public function getUipi()
    {
        return $this->container['uipi'];
    }

    /**
     * Sets uipi
     * @param string $uipi Unique Internal Pupil Number.
     * @return $this
     */
    public function setUipi($uipi)
    {
        $this->container['uipi'] = $uipi;

        return $this;
    }

    /**
     * Gets upn
     * @return string
     */
    public function getUpn()
    {
        return $this->container['upn'];
    }

    /**
     * Sets upn
     * @param string $upn Unique Pupil Number (UPN) allocated to each learner in maintained schools in England and Wales. It is an identifier for use in the educational context during a child&#039;s school career only and subject to Data Protection restrictions.
     * @return $this
     */
    public function setUpn($upn)
    {
        $this->container['upn'] = $upn;

        return $this;
    }

    /**
     * Gets upn_allocation_date
     * @return \DateTime
     */
    public function getUpnAllocationDate()
    {
        return $this->container['upn_allocation_date'];
    }

    /**
     * Sets upn_allocation_date
     * @param \DateTime $upn_allocation_date Date UPN was allocated by the LA.
     * @return $this
     */
    public function setUpnAllocationDate($upn_allocation_date)
    {
        $this->container['upn_allocation_date'] = $upn_allocation_date;

        return $this;
    }

    /**
     * Gets former_upn_list
     * @return string[]
     */
    public function getFormerUpnList()
    {
        return $this->container['former_upn_list'];
    }

    /**
     * Sets former_upn_list
     * @param string[] $former_upn_list
     * @return $this
     */
    public function setFormerUpnList($former_upn_list)
    {
        $this->container['former_upn_list'] = $former_upn_list;

        return $this;
    }

    /**
     * Gets uln
     * @return string
     */
    public function getUln()
    {
        return $this->container['uln'];
    }

    /**
     * Sets uln
     * @param string $uln
     * @return $this
     */
    public function setUln($uln)
    {
        $this->container['uln'] = $uln;

        return $this;
    }

    /**
     * Gets external_learner_identifier_list
     * @return \DataExchange\SIFUK20\Models\ExternalLearnerIdentifier[]
     */
    public function getExternalLearnerIdentifierList()
    {
        return $this->container['external_learner_identifier_list'];
    }

    /**
     * Sets external_learner_identifier_list
     * @param \DataExchange\SIFUK20\Models\ExternalLearnerIdentifier[] $external_learner_identifier_list
     * @return $this
     */
    public function setExternalLearnerIdentifierList($external_learner_identifier_list)
    {
        $this->container['external_learner_identifier_list'] = $external_learner_identifier_list;

        return $this;
    }

    /**
     * Gets family_structure
     * @return string
     */
    public function getFamilyStructure()
    {
        return $this->container['family_structure'];
    }

    /**
     * Sets family_structure
     * @param string $family_structure Indicates type of family structure learner is living in.
     * @return $this
     */
    public function setFamilyStructure($family_structure)
    {
        $this->container['family_structure'] = $family_structure;

        return $this;
    }

    /**
     * Gets in_care
     * @return \DataExchange\SIFUK20\Models\InCare
     */
    public function getInCare()
    {
        return $this->container['in_care'];
    }

    /**
     * Sets in_care
     * @param \DataExchange\SIFUK20\Models\InCare $in_care
     * @return $this
     */
    public function setInCare($in_care)
    {
        $this->container['in_care'] = $in_care;

        return $this;
    }

    /**
     * Gets connexions_agreement
     * @return string
     */
    public function getConnexionsAgreement()
    {
        return $this->container['connexions_agreement'];
    }

    /**
     * Sets connexions_agreement
     * @param string $connexions_agreement Indicates if parents have consented to allow learner data to be shared with Connexions (Middle, Secondary and Special Schools only).
     * @return $this
     */
    public function setConnexionsAgreement($connexions_agreement)
    {
        $this->container['connexions_agreement'] = $connexions_agreement;

        return $this;
    }

    /**
     * Gets child_protection_register
     * @return \DataExchange\SIFUK20\Models\ChildProtectionRegister
     */
    public function getChildProtectionRegister()
    {
        return $this->container['child_protection_register'];
    }

    /**
     * Sets child_protection_register
     * @param \DataExchange\SIFUK20\Models\ChildProtectionRegister $child_protection_register
     * @return $this
     */
    public function setChildProtectionRegister($child_protection_register)
    {
        $this->container['child_protection_register'] = $child_protection_register;

        return $this;
    }

    /**
     * Gets gifted_talented
     * @return string
     */
    public function getGiftedTalented()
    {
        return $this->container['gifted_talented'];
    }

    /**
     * Sets gifted_talented
     * @param string $gifted_talented Learner qualifies for Gifted/Talented status.
     * @return $this
     */
    public function setGiftedTalented($gifted_talented)
    {
        $this->container['gifted_talented'] = $gifted_talented;

        return $this;
    }

    /**
     * Gets home_la
     * @return string
     */
    public function getHomeLa()
    {
        return $this->container['home_la'];
    }

    /**
     * Sets home_la
     * @param string $home_la The LA in which the learner lives but not necessarily the one in which they attend school.
     * @return $this
     */
    public function setHomeLa($home_la)
    {
        $this->container['home_la'] = $home_la;

        return $this;
    }

    /**
     * Gets learner_identity
     * @return string
     */
    public function getLearnerIdentity()
    {
        return $this->container['learner_identity'];
    }

    /**
     * Sets learner_identity
     * @param string $learner_identity Classification of national identity. (Wales)
     * @return $this
     */
    public function setLearnerIdentity($learner_identity)
    {
        $this->container['learner_identity'] = $learner_identity;

        return $this;
    }

    /**
     * Gets mode_of_travel
     * @return string
     */
    public function getModeOfTravel()
    {
        return $this->container['mode_of_travel'];
    }

    /**
     * Sets mode_of_travel
     * @param string $mode_of_travel The usual mode of travel normally used by the learner for the greater part (in distance) of the journey to and from school.
     * @return $this
     */
    public function setModeOfTravel($mode_of_travel)
    {
        $this->container['mode_of_travel'] = $mode_of_travel;

        return $this;
    }

    /**
     * Gets pregnant
     * @return string
     */
    public function getPregnant()
    {
        return $this->container['pregnant'];
    }

    /**
     * Sets pregnant
     * @param string $pregnant Learner is pregnant.
     * @return $this
     */
    public function setPregnant($pregnant)
    {
        $this->container['pregnant'] = $pregnant;

        return $this;
    }

    /**
     * Gets sibling_list
     * @return \DataExchange\SIFUK20\Models\Sibling[]
     */
    public function getSiblingList()
    {
        return $this->container['sibling_list'];
    }

    /**
     * Sets sibling_list
     * @param \DataExchange\SIFUK20\Models\Sibling[] $sibling_list
     * @return $this
     */
    public function setSiblingList($sibling_list)
    {
        $this->container['sibling_list'] = $sibling_list;

        return $this;
    }

    /**
     * Gets uniform_allowance
     * @return string
     */
    public function getUniformAllowance()
    {
        return $this->container['uniform_allowance'];
    }

    /**
     * Sets uniform_allowance
     * @param string $uniform_allowance Learner is paid a uniform allowance.
     * @return $this
     */
    public function setUniformAllowance($uniform_allowance)
    {
        $this->container['uniform_allowance'] = $uniform_allowance;

        return $this;
    }

    /**
     * Gets current_school_enrolment
     * @return \DataExchange\SIFUK20\Models\CurrentSchoolEnrolment
     */
    public function getCurrentSchoolEnrolment()
    {
        return $this->container['current_school_enrolment'];
    }

    /**
     * Sets current_school_enrolment
     * @param \DataExchange\SIFUK20\Models\CurrentSchoolEnrolment $current_school_enrolment
     * @return $this
     */
    public function setCurrentSchoolEnrolment($current_school_enrolment)
    {
        $this->container['current_school_enrolment'] = $current_school_enrolment;

        return $this;
    }

    /**
     * Gets previous_establishment_list
     * @return \DataExchange\SIFUK20\Models\PreviousEstablishment[]
     */
    public function getPreviousEstablishmentList()
    {
        return $this->container['previous_establishment_list'];
    }

    /**
     * Sets previous_establishment_list
     * @param \DataExchange\SIFUK20\Models\PreviousEstablishment[] $previous_establishment_list
     * @return $this
     */
    public function setPreviousEstablishmentList($previous_establishment_list)
    {
        $this->container['previous_establishment_list'] = $previous_establishment_list;

        return $this;
    }

    /**
     * Gets sif_extended_elements
     * @return \DataExchange\SIFUK20\Models\SIFExtendedElement1[]
     */
    public function getSifExtendedElements()
    {
        return $this->container['sif_extended_elements'];
    }

    /**
     * Sets sif_extended_elements
     * @param \DataExchange\SIFUK20\Models\SIFExtendedElement1[] $sif_extended_elements Allows an agent to include data not yet defined within a SIF data object as name/value pairs.
     * @return $this
     */
    public function setSifExtendedElements($sif_extended_elements)
    {
        $this->container['sif_extended_elements'] = $sif_extended_elements;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\DataExchange\SIFUK20\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\DataExchange\SIFUK20\ObjectSerializer::sanitizeForSerialization($this));
    }
}
