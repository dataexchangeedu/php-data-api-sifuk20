<?php
/**
 * Demographics
 *
 * PHP version 5
 *
 * @category Class
 * @package  DataExchange\SIFUK20
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SIF (UK), v.2.0
 *
 * DataExchange for the SIF (UK), v.2.0 data model
 *
 * OpenAPI spec version: 1.0
 * Contact: support@dataexchange.education
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DataExchange\SIFUK20\Models;

use \ArrayAccess;

/**
 * Demographics Class Doc Comment
 *
 * @category    Class */
 // @description This element contains demographic data.
/**
 * @package     DataExchange\SIFUK20
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Demographics implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Demographics';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ethnicity_list' => '\DataExchange\SIFUK20\Models\Ethnicity[]',
        'gender' => 'string',
        'birth_date' => '\DateTime',
        'birth_date_verification' => 'string',
        'place_of_birth' => 'string',
        'county_of_birth' => 'string',
        'country_of_birth' => 'string',
        'countries_of_citizenship' => '\DataExchange\SIFUK20\Models\CountriesOfCitizenship',
        'countries_of_residency' => '\DataExchange\SIFUK20\Models\CountriesOfResidency',
        'country_arrival_date' => '\DateTime',
        'english_proficiency' => '\DataExchange\SIFUK20\Models\EnglishProficiency',
        'language_list' => '\DataExchange\SIFUK20\Models\Language[]',
        'marital_status' => 'string',
        'non_uk_system_immigrant' => 'string',
        'refugee' => 'string',
        'religion' => '\DataExchange\SIFUK20\Models\Religion',
        'traveller' => '\DataExchange\SIFUK20\Models\Traveller'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'ethnicity_list' => 'EthnicityList',
        'gender' => 'Gender',
        'birth_date' => 'BirthDate',
        'birth_date_verification' => 'BirthDateVerification',
        'place_of_birth' => 'PlaceOfBirth',
        'county_of_birth' => 'CountyOfBirth',
        'country_of_birth' => 'CountryOfBirth',
        'countries_of_citizenship' => 'CountriesOfCitizenship',
        'countries_of_residency' => 'CountriesOfResidency',
        'country_arrival_date' => 'CountryArrivalDate',
        'english_proficiency' => 'EnglishProficiency',
        'language_list' => 'LanguageList',
        'marital_status' => 'MaritalStatus',
        'non_uk_system_immigrant' => 'NonUKSystemImmigrant',
        'refugee' => 'Refugee',
        'religion' => 'Religion',
        'traveller' => 'Traveller'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'ethnicity_list' => 'setEthnicityList',
        'gender' => 'setGender',
        'birth_date' => 'setBirthDate',
        'birth_date_verification' => 'setBirthDateVerification',
        'place_of_birth' => 'setPlaceOfBirth',
        'county_of_birth' => 'setCountyOfBirth',
        'country_of_birth' => 'setCountryOfBirth',
        'countries_of_citizenship' => 'setCountriesOfCitizenship',
        'countries_of_residency' => 'setCountriesOfResidency',
        'country_arrival_date' => 'setCountryArrivalDate',
        'english_proficiency' => 'setEnglishProficiency',
        'language_list' => 'setLanguageList',
        'marital_status' => 'setMaritalStatus',
        'non_uk_system_immigrant' => 'setNonUkSystemImmigrant',
        'refugee' => 'setRefugee',
        'religion' => 'setReligion',
        'traveller' => 'setTraveller'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'ethnicity_list' => 'getEthnicityList',
        'gender' => 'getGender',
        'birth_date' => 'getBirthDate',
        'birth_date_verification' => 'getBirthDateVerification',
        'place_of_birth' => 'getPlaceOfBirth',
        'county_of_birth' => 'getCountyOfBirth',
        'country_of_birth' => 'getCountryOfBirth',
        'countries_of_citizenship' => 'getCountriesOfCitizenship',
        'countries_of_residency' => 'getCountriesOfResidency',
        'country_arrival_date' => 'getCountryArrivalDate',
        'english_proficiency' => 'getEnglishProficiency',
        'language_list' => 'getLanguageList',
        'marital_status' => 'getMaritalStatus',
        'non_uk_system_immigrant' => 'getNonUkSystemImmigrant',
        'refugee' => 'getRefugee',
        'religion' => 'getReligion',
        'traveller' => 'getTraveller'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ethnicity_list'] = isset($data['ethnicity_list']) ? $data['ethnicity_list'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['birth_date'] = isset($data['birth_date']) ? $data['birth_date'] : null;
        $this->container['birth_date_verification'] = isset($data['birth_date_verification']) ? $data['birth_date_verification'] : null;
        $this->container['place_of_birth'] = isset($data['place_of_birth']) ? $data['place_of_birth'] : null;
        $this->container['county_of_birth'] = isset($data['county_of_birth']) ? $data['county_of_birth'] : null;
        $this->container['country_of_birth'] = isset($data['country_of_birth']) ? $data['country_of_birth'] : null;
        $this->container['countries_of_citizenship'] = isset($data['countries_of_citizenship']) ? $data['countries_of_citizenship'] : null;
        $this->container['countries_of_residency'] = isset($data['countries_of_residency']) ? $data['countries_of_residency'] : null;
        $this->container['country_arrival_date'] = isset($data['country_arrival_date']) ? $data['country_arrival_date'] : null;
        $this->container['english_proficiency'] = isset($data['english_proficiency']) ? $data['english_proficiency'] : null;
        $this->container['language_list'] = isset($data['language_list']) ? $data['language_list'] : null;
        $this->container['marital_status'] = isset($data['marital_status']) ? $data['marital_status'] : null;
        $this->container['non_uk_system_immigrant'] = isset($data['non_uk_system_immigrant']) ? $data['non_uk_system_immigrant'] : null;
        $this->container['refugee'] = isset($data['refugee']) ? $data['refugee'] : null;
        $this->container['religion'] = isset($data['religion']) ? $data['religion'] : null;
        $this->container['traveller'] = isset($data['traveller']) ? $data['traveller'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets ethnicity_list
     * @return \DataExchange\SIFUK20\Models\Ethnicity[]
     */
    public function getEthnicityList()
    {
        return $this->container['ethnicity_list'];
    }

    /**
     * Sets ethnicity_list
     * @param \DataExchange\SIFUK20\Models\Ethnicity[] $ethnicity_list A list of the person&#039;s ethnicities by proportion.
     * @return $this
     */
    public function setEthnicityList($ethnicity_list)
    {
        $this->container['ethnicity_list'] = $ethnicity_list;

        return $this;
    }

    /**
     * Gets gender
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     * @param string $gender Person&#039;s gender.
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets birth_date
     * @return \DateTime
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     * @param \DateTime $birth_date The person&#039;s date of birth. Required for learners. Optional for others.
     * @return $this
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets birth_date_verification
     * @return string
     */
    public function getBirthDateVerification()
    {
        return $this->container['birth_date_verification'];
    }

    /**
     * Sets birth_date_verification
     * @param string $birth_date_verification Means by which the person&#039;s birth date was validated.
     * @return $this
     */
    public function setBirthDateVerification($birth_date_verification)
    {
        $this->container['birth_date_verification'] = $birth_date_verification;

        return $this;
    }

    /**
     * Gets place_of_birth
     * @return string
     */
    public function getPlaceOfBirth()
    {
        return $this->container['place_of_birth'];
    }

    /**
     * Sets place_of_birth
     * @param string $place_of_birth The person&#039;s place of birth--like village, town, city etc.
     * @return $this
     */
    public function setPlaceOfBirth($place_of_birth)
    {
        $this->container['place_of_birth'] = $place_of_birth;

        return $this;
    }

    /**
     * Gets county_of_birth
     * @return string
     */
    public function getCountyOfBirth()
    {
        return $this->container['county_of_birth'];
    }

    /**
     * Sets county_of_birth
     * @param string $county_of_birth The county in which the person was born.
     * @return $this
     */
    public function setCountyOfBirth($county_of_birth)
    {
        $this->container['county_of_birth'] = $county_of_birth;

        return $this;
    }

    /**
     * Gets country_of_birth
     * @return string
     */
    public function getCountryOfBirth()
    {
        return $this->container['country_of_birth'];
    }

    /**
     * Sets country_of_birth
     * @param string $country_of_birth The individual&#039;s country of birth.
     * @return $this
     */
    public function setCountryOfBirth($country_of_birth)
    {
        $this->container['country_of_birth'] = $country_of_birth;

        return $this;
    }

    /**
     * Gets countries_of_citizenship
     * @return \DataExchange\SIFUK20\Models\CountriesOfCitizenship
     */
    public function getCountriesOfCitizenship()
    {
        return $this->container['countries_of_citizenship'];
    }

    /**
     * Sets countries_of_citizenship
     * @param \DataExchange\SIFUK20\Models\CountriesOfCitizenship $countries_of_citizenship
     * @return $this
     */
    public function setCountriesOfCitizenship($countries_of_citizenship)
    {
        $this->container['countries_of_citizenship'] = $countries_of_citizenship;

        return $this;
    }

    /**
     * Gets countries_of_residency
     * @return \DataExchange\SIFUK20\Models\CountriesOfResidency
     */
    public function getCountriesOfResidency()
    {
        return $this->container['countries_of_residency'];
    }

    /**
     * Sets countries_of_residency
     * @param \DataExchange\SIFUK20\Models\CountriesOfResidency $countries_of_residency
     * @return $this
     */
    public function setCountriesOfResidency($countries_of_residency)
    {
        $this->container['countries_of_residency'] = $countries_of_residency;

        return $this;
    }

    /**
     * Gets country_arrival_date
     * @return \DateTime
     */
    public function getCountryArrivalDate()
    {
        return $this->container['country_arrival_date'];
    }

    /**
     * Sets country_arrival_date
     * @param \DateTime $country_arrival_date Date the person first arrived in the UK.
     * @return $this
     */
    public function setCountryArrivalDate($country_arrival_date)
    {
        $this->container['country_arrival_date'] = $country_arrival_date;

        return $this;
    }

    /**
     * Gets english_proficiency
     * @return \DataExchange\SIFUK20\Models\EnglishProficiency
     */
    public function getEnglishProficiency()
    {
        return $this->container['english_proficiency'];
    }

    /**
     * Sets english_proficiency
     * @param \DataExchange\SIFUK20\Models\EnglishProficiency $english_proficiency
     * @return $this
     */
    public function setEnglishProficiency($english_proficiency)
    {
        $this->container['english_proficiency'] = $english_proficiency;

        return $this;
    }

    /**
     * Gets language_list
     * @return \DataExchange\SIFUK20\Models\Language[]
     */
    public function getLanguageList()
    {
        return $this->container['language_list'];
    }

    /**
     * Sets language_list
     * @param \DataExchange\SIFUK20\Models\Language[] $language_list
     * @return $this
     */
    public function setLanguageList($language_list)
    {
        $this->container['language_list'] = $language_list;

        return $this;
    }

    /**
     * Gets marital_status
     * @return string
     */
    public function getMaritalStatus()
    {
        return $this->container['marital_status'];
    }

    /**
     * Sets marital_status
     * @param string $marital_status The person&#039;s marital status.
     * @return $this
     */
    public function setMaritalStatus($marital_status)
    {
        $this->container['marital_status'] = $marital_status;

        return $this;
    }

    /**
     * Gets non_uk_system_immigrant
     * @return string
     */
    public function getNonUkSystemImmigrant()
    {
        return $this->container['non_uk_system_immigrant'];
    }

    /**
     * Sets non_uk_system_immigrant
     * @param string $non_uk_system_immigrant Indicates the learner has recently arrived from a non-English or other common UK language system. (Wales)
     * @return $this
     */
    public function setNonUkSystemImmigrant($non_uk_system_immigrant)
    {
        $this->container['non_uk_system_immigrant'] = $non_uk_system_immigrant;

        return $this;
    }

    /**
     * Gets refugee
     * @return string
     */
    public function getRefugee()
    {
        return $this->container['refugee'];
    }

    /**
     * Sets refugee
     * @param string $refugee Indicates the person&#039;s refugee/asylum seeker status as defined by the United Nations (Article 1 of the 1951 Refugee Convention).
     * @return $this
     */
    public function setRefugee($refugee)
    {
        $this->container['refugee'] = $refugee;

        return $this;
    }

    /**
     * Gets religion
     * @return \DataExchange\SIFUK20\Models\Religion
     */
    public function getReligion()
    {
        return $this->container['religion'];
    }

    /**
     * Sets religion
     * @param \DataExchange\SIFUK20\Models\Religion $religion
     * @return $this
     */
    public function setReligion($religion)
    {
        $this->container['religion'] = $religion;

        return $this;
    }

    /**
     * Gets traveller
     * @return \DataExchange\SIFUK20\Models\Traveller
     */
    public function getTraveller()
    {
        return $this->container['traveller'];
    }

    /**
     * Sets traveller
     * @param \DataExchange\SIFUK20\Models\Traveller $traveller
     * @return $this
     */
    public function setTraveller($traveller)
    {
        $this->container['traveller'] = $traveller;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\DataExchange\SIFUK20\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\DataExchange\SIFUK20\ObjectSerializer::sanitizeForSerialization($this));
    }
}
